# Enhanced aliases for productivity

# Basic shortcuts
alias ll='eza -la --git --time-style=relative'
alias la='eza -a'
alias l='eza -l --git'
alias tree='eza --tree'
alias cat='bat --paging=never'
# alias grep='rg'  # Commented out - causes issues with scripts expecting GNU grep
alias find='fd'

# Git shortcuts (supplement .gitconfig)
alias g='git'
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gp='git push'
alias gl='git pull'
alias gd='git diff'
alias gco='git checkout'
alias gb='git branch'
alias glog='git log --oneline --graph --decorate'

# Directory navigation  
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias ~='cd ~'
alias c='cd ~/code'
# Previous directory navigation (removed problematic alias)

# System info
alias df='df -h'
alias du='du -sh'
alias free='free -h'
alias top='btop'
alias ps='ps aux'

# Network
alias ports='netstat -tuln'
alias ping='ping -c 5'
alias wget='wget -c'

# File operations
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias mkdir='mkdir -p'

# Limit fd threads to prevent runaway processes
alias fd='fd --threads=4'

# Development
alias serve='python3 -m http.server'
alias myip='curl -s https://httpbin.org/ip | jq -r .origin'
alias weather='curl -s "wttr.in/$(curl -s https://ipinfo.io/city)" | head -20'

# Docker shortcuts
alias d='docker'
alias dc='docker-compose'
alias dps='docker ps'
alias di='docker images'
alias drm='docker rm $(docker ps -aq)'
alias drmi='docker rmi $(docker images -q)'

# Kubernetes
alias k='kubectl'
alias kgp='kubectl get pods'
alias kgs='kubectl get services'
alias kgd='kubectl get deployments'

# Tmux shortcuts
alias ta='tmux attach'
alias tls='tmux list-sessions'
alias tn='tmux new-session'
alias tk='tmux kill-session'

# Editors
alias vim='~/.local/share/mise/installs/helix/25.01.1/hx'
alias hx='~/.local/share/mise/installs/helix/25.01.1/hx'
alias vi='~/.local/share/mise/installs/helix/25.01.1/hx'

# Quick edits
alias bashrc='${EDITOR:-hx} ~/.bashrc && source ~/.bashrc'
alias aliases='${EDITOR:-hx} ~/.aliases && source ~/.aliases'
alias dotfiles='cd ~/.dotfiles && ${EDITOR:-hx} .'

# System maintenance
alias update='sudo apt update && sudo apt upgrade'
alias install='sudo apt install'
alias search='apt search'
alias clean='sudo apt autoremove && sudo apt autoclean'

# Mise shortcuts
alias mi='mise install'
alias mu='mise use'
alias ml='mise list'
alias mr='mise run'

# Quick system checks
alias diskspace='df -h | grep -E "^(/dev/|tmpfs)" | sort'
alias meminfo='free -h && echo "" && ps aux --sort=-%mem | head'
alias cpuinfo='lscpu | grep -E "^(Model name|CPU\(s\)|Thread|Core)" && echo "" && top -bn1 | grep "Cpu(s)"'

# Reload shell
alias reload='exec $SHELL -l'

# Safety nets
alias chown='chown --preserve-root'
alias chmod='chmod --preserve-root' 
alias chgrp='chgrp --preserve-root'

# Fun stuff
alias matrix='cmatrix -s'
alias starwars='telnet towel.blinkenlights.nl'
alias weather-full='curl -s "wttr.in/$(curl -s https://ipinfo.io/city)"'

# Smart code navigation - type c<pattern> to fuzzy match repos
# This creates aliases for all repos and a fallback for fuzzy matching
_setup_code_aliases() {
    # Only set up if ~/code exists
    [ -d "$HOME/code" ] || return
    
    # Use Rust tool fd (available via mise)
    # For each directory in ~/code, create an alias if it doesn't conflict
    for dir in $(fd -t d -d 1 . "$HOME/code" --base-directory "$HOME/code" 2>/dev/null); do
        local repo_name="$dir"
        local alias_name="c${repo_name}"
        
        # Only create alias if command doesn't exist
        if ! command -v "$alias_name" &> /dev/null 2>&1; then
            alias "$alias_name"="cd '$HOME/code/$repo_name'"
        fi
    done
}

# Smart fuzzy code navigation
c() {
    # If no argument, just go to ~/code
    if [ $# -eq 0 ]; then
        cd ~/code
        return
    fi
    
    local pattern="$1"
    local matches=()
    
    # Use Rust tool fd for finding directories
    local fd_cmd="${FD_CMD:-fd}"
    if ! command -v fd &> /dev/null; then
        fd_cmd="/home/mhugo/.local/share/mise/installs/fd/10.2.0/fd-v10.2.0-x86_64-unknown-linux-musl/fd"
    fi
    
    # Find all directories matching the pattern using fd (rust tool)
    if [ -d "$HOME/code" ]; then
        while IFS= read -r dir; do
            matches+=("$dir")
        done < <("$fd_cmd" -t d -d 1 "${pattern}" "$HOME/code" --base-directory "$HOME/code" 2>/dev/null)
    fi
    
    # Handle results
    if [ ${#matches[@]} -eq 0 ]; then
        echo "No repos matching '$pattern'"
        return 1
    elif [ ${#matches[@]} -eq 1 ]; then
        cd "$HOME/code/${matches[0]}"
    else
        # Multiple matches - use fzf to select
        local selected=$(printf '%s\n' "${matches[@]}" | fzf --reverse --height=40% --prompt="Multiple matches for '$pattern': ")
        if [ -n "$selected" ]; then
            cd "$HOME/code/$selected"
        fi
    fi
}

# Set up aliases on shell start
_setup_code_aliases