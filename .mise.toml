[tools]
# Languages
python = "latest"
node = "latest"
go = "latest"
rust = "latest"

# Package managers
pnpm = "latest"

# Modern rust-based CLI tools (better than originals)
bat = "latest"       # better cat
fd = "latest"        # better find
ripgrep = "latest"   # better grep (rg)
eza = "latest"       # better ls
delta = "latest"     # better diff
dust = "latest"      # better du
duf = "latest"       # better df
btop = "latest"      # better top/htop
sd = "latest"        # better sed
hyperfine = "latest" # better time
doggo = "latest"     # better dig
helix = "latest"     # modern editor
gitui = "latest"     # better git UI
bottom = "latest"    # another system monitor
tokei = "latest"     # code statistics
# tealdeer = "latest"  # not in mise, use: cargo install tealdeer
# broot = "latest"     # not in mise, use: cargo install broot
# xh = "latest"        # not in mise, use: cargo install xh
zoxide = "latest"    # better cd

# Development tools
lazygit = "latest"
github-cli = "latest"
starship = "latest"
direnv = "latest"
just = "latest"
watchexec = "latest"

# Kubernetes tools
k9s = "latest"         # Kubernetes TUI
kubectl = "latest"     # Kubernetes CLI
kind = "latest"        # Kubernetes in Docker
helm = "latest"        # Package manager for Kubernetes
kubectx = "latest"     # Switch between clusters/namespaces
kustomize = "latest"   # Kubernetes config management
dive = "latest"        # Docker image explorer
stern = "latest"       # Multi-pod log tailing
# flux = "latest"        # not in mise, install manually

# TUI tools
gum = "latest"
fzf = "latest"
yazi = "latest"
lazydocker = "latest"

# Linters & formatters
shellcheck = "latest"
shfmt = "latest"
yamllint = "latest"
golangci-lint = "latest"
actionlint = "latest"

# Utils
jq = "latest"
yq = "latest"
gron = "latest"      # make JSON greppable
sqlite = "latest"    # SQLite database
pipx = "latest"
# jaq = "latest"       # not in mise, use: cargo install jaq
# tmux = "latest"    # needs system libs

[tasks.test]
run = "echo 'Running tests...'"
description = "Run project tests"

[tasks.lint]
run = ["shellcheck scripts/*.sh", "yamllint ."]
description = "Lint all files"

[tasks.setup]
run = ["./.scripts/auto-install.sh", "./.scripts/install-system-deps.sh"]
description = "Complete setup - auto-install everything possible"

[tasks.auto-install]
run = "./.scripts/auto-install.sh"
description = "Install everything possible without sudo"

[tasks.system-deps]
run = "./.scripts/install-system-deps.sh"
description = "Install system dependencies (tmux, build tools, etc.)"

[tasks.sync]
run = "./.scripts/auto-sync.sh"
description = "Auto-sync dotfiles, tokens, and SSH hosts"

[tasks.update]
run = """
  echo "📦 Updating mise tools..."
  mise upgrade
  mise install
  
  echo ""
  echo "🦀 Updating cargo-installed tools..."
  if command -v cargo-update >/dev/null 2>&1; then
    cargo install-update -a
  else
    echo "⚠️  cargo-update not installed. Installing..."
    cargo install cargo-update
    cargo install-update -a
  fi
  
  echo ""
  echo "🚀 Installing missing rust tools..."
  # Install tools not available in mise
  for tool in procs gping tealdeer broot xh jaq nu; do
    if ! command -v $tool >/dev/null 2>&1; then
      echo "Installing $tool..."
      cargo install $tool
    fi
  done
  
  echo ""
  echo "✅ All tools updated!"
"""
description = "Update all tools (mise + cargo) to latest versions"

[tasks.update-mise]
run = "mise upgrade && mise install"
description = "Update only mise-managed tools"

[tasks.update-cargo]
run = """
  if command -v cargo-update >/dev/null 2>&1; then
    cargo install-update -a
  else
    cargo install cargo-update
    cargo install-update -a
  fi
"""
description = "Update only cargo-installed tools"

[tasks.gateway-backup]
run = "./.scripts/backup-tabby-gateway.sh"
description = "Backup Tabby gateway data to GitHub gist"

[tasks.gateway-sync]
run = "./.scripts/tabby-gateway-config.sh sync"
description = "Sync Tabby gateway config from gist"

[tasks.gateway-deploy]
run = "./.scripts/deploy-tabby-gateway.sh"
description = "Deploy Tabby gateway container"

[tasks.gateway-status]
run = "./.scripts/gateway-status.sh status"
description = "Check Tabby gateway status on this server"

[tasks.gateway-ensure]
run = "./.scripts/gateway-status.sh ensure"
description = "Ensure gateway is running on this server"

[tasks.gateway-update]
run = "./.scripts/gateway-status.sh update"
description = "Update gateway status and sync to gist"

[tasks.gateway-schedule]
run = """
  echo "🕐 Setting up scheduled gateway tasks..."
  
  # Check if this is the gateway server
  if ~/.dotfiles/.scripts/gateway-status.sh status | grep -q "Gateway is running"; then
    echo "✅ This is the gateway server ($(hostname))"
    
    # Setup cron job for regular status checks and backups
    (crontab -l 2>/dev/null | grep -v "gateway-status\\|backup-tabby-gateway" ; cat << EOF
# Tabby Gateway Status Check (every 5 minutes)
*/5 * * * * /home/mhugo/.dotfiles/.scripts/gateway-status.sh ensure >> /home/mhugo/.dotfiles/logs/gateway-status.log 2>&1

# Tabby Gateway Daily Backup (3 AM)
0 3 * * * /home/mhugo/.dotfiles/.scripts/backup-tabby-gateway.sh >> /home/mhugo/.dotfiles/logs/gateway-backup.log 2>&1
EOF
    ) | crontab -
    
    echo "✅ Cron jobs installed"
    crontab -l | grep gateway
  else
    echo "⚠️  Gateway not running on this server"
    echo "Run 'mise run gateway-deploy' to deploy here"
  fi
"""
description = "Setup scheduled tasks for gateway (status checks + backups)"

[tasks.schedule-updates]
run = """
  echo "🕐 Setting up weekly tool updates..."
  
  # Setup cron job for weekly updates
  (crontab -l 2>/dev/null | grep -v "mise run update" ; cat << EOF
# Weekly tool updates (Sundays at 2 AM)
0 2 * * 0 cd /home/mhugo/.dotfiles && /home/mhugo/.local/bin/mise run update >> /home/mhugo/.dotfiles/logs/tool-updates.log 2>&1
EOF
  ) | crontab -
  
  echo "✅ Weekly updates scheduled"
  echo "📋 Current cron jobs:"
  crontab -l | grep -E "(mise|tool)"
"""
description = "Schedule weekly automatic tool updates"
