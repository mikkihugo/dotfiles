#!/bin/bash
# Simple script to output files that need linting for piping to aider

# Find all source files
find . -type f \( \
    -name "*.js" -o -name "*.jsx" -o \
    -name "*.ts" -o -name "*.tsx" -o \
    -name "*.py" -o -name "*.rs" -o \
    -name "*.go" -o -name "*.c" -o \
    -name "*.cpp" -o -name "*.h" -o \
    -name "*.sh" -o -name "*.bash" \
\) -not -path "*/node_modules/*" \
   -not -path "*/.git/*" \
   -not -path "*/dist/*" \
   -not -path "*/build/*" \
   -not -path "*/target/*" \
   -not -path "*/.cache/*" \
   -not -path "*/vendor/*" | \
while read -r file; do
    # Quick check for issues
    if rg -q "TODO:|FIXME:|enhanced-|improved-|data[0-9]+\s*=" "$file" 2>/dev/null; then
        echo "$file"
        continue
    fi
    
    # Language specific checks
    case "$file" in
        *.py)
            ruff check "$file" &>/dev/null || echo "$file"
            ;;
        *.js|*.jsx|*.ts|*.tsx)
            oxlint "$file" &>/dev/null || echo "$file"
            ;;
        *)
            # For other files, check if modified
            git diff --name-only 2>/dev/null | grep -q "^$file$" && echo "$file"
            ;;
    esac
done | sort -u