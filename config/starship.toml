# ==============================================================================
# Starship Prompt Configuration
# ==============================================================================
#
# Copyright 2024 Mikki Hugo. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# FILE: starship.toml
# DESCRIPTION: Modern, informative shell prompt configuration for Starship.
#              Provides contextual information about development environment
#              including git status, programming language versions, and
#              system resources with performance-optimized display.
#
# AUTHOR: Mikki Hugo <mikkihugo@gmail.com>
# VERSION: 2.3.0
# CREATED: 2024-01-22
# MODIFIED: 2024-12-06
#
# PROMPT ELEMENTS:
#   - User/Host: Current user and hostname
#   - Directory: Current working directory with truncation
#   - Git: Branch, status, and commit information
#   - Languages: Python, Node.js, Go, Rust version indicators
#   - Kubernetes: Current context and namespace
#   - Performance: Memory usage and command duration
#   - Time: Timestamp for command execution
#
# PERFORMANCE OPTIMIZATIONS:
#   - Async module loading for faster prompt rendering
#   - Conditional display based on context
#   - Minimal external command execution
#   - Efficient git status checking
#
# CUSTOMIZATION:
#   - Modify format string to reorder elements
#   - Adjust individual module configurations
#   - Add custom modules for specific needs
#   - Configure color themes per environment
#
# ==============================================================================

# Starship configuration
format = """
$username\
$hostname\
$directory\
$git_branch\
$git_status\
$python\
$nodejs\
$deno\
$golang\
$rust\
$package\
$kubernetes\
$memory_usage\
$custom\
$cmd_duration\
$time\
$line_break\
$character"""

[character]
success_symbol = "[‚ùØ](bold #A3BE8C)"
error_symbol = "[‚ùØ](bold #BF616A)"

[directory]
style = "#81A1C1 bold"
truncation_length = 3
truncate_to_repo = false

[git_branch]
symbol = "üåø "
style = "#A3BE8C bold"

[git_status]
style = "#BF616A bold"

[python]
symbol = "üêç "
python_binary = "python"

[nodejs]
symbol = "‚¨¢ "
style = "#A3BE8C bold"
detect_extensions = ["js", "mjs", "cjs", "jsx", "tsx", "ts"]
not_capable_style = "bold red"
# Hide Node.js if Deno is detected
detect_files = ["package.json", ".node-version", ".nvmrc"]
# Only show Node when package.json is in the directory (not for global node)
detect_folders = []

[deno]
symbol = "ü¶ï "
style = "#A3BE8C bold"
detect_extensions = ["ts", "tsx", "js", "jsx"]
detect_files = ["deno.json", "deno.jsonc", "mod.ts", "deps.ts", "lock.json"]

[golang]
symbol = "üêπ "

[rust]
symbol = "ü¶Ä "

[kubernetes]
disabled = false
symbol = "‚ò∏Ô∏è "

[memory_usage]
disabled = false
threshold = 75
style = "bold dimmed green"
format = "$symbol[${ram}( | ${swap})]($style) "

[custom.processes]
command = "echo -n \"PROC: $(ps -e --no-header | wc -l)/$(ulimit -u)\""
when = "true"
style = "bold yellow"
format = "[$output]($style) "
command_timeout = 2000
ignore_timeout = true

[custom.cpu]
command = "top -bn1 | grep 'Cpu(s)' | awk '{print $2+$4 \"%\"}'"
when = "true"
style = "bold dimmed green"
format = "CPU: [$output]($style) "
command_timeout = 2000
ignore_timeout = true

[time]
disabled = false
style = "white bold"
format = "[$time]($style)"
