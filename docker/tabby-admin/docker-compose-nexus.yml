version: '3.8'

services:
  # Traefik with automatic Let's Encrypt
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "10080:80"
      - "10443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/traefik.yml:/traefik.yml:ro
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.nexus.hugo.dk`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$2y$$10$$..."

  # All-in-one AI Development Environment
  ai-dev:
    build:
      context: ./ai-dev
      dockerfile: Dockerfile.all-in-one
    container_name: ai-dev
    restart: unless-stopped
    volumes:
      - ~/code:/workspace
      - ~/.gitconfig:/root/.gitconfig:ro
      - ~/.ssh:/root/.ssh:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
    labels:
      - "traefik.enable=true"
      # VS Code
      - "traefik.http.routers.code.rule=Host(`code.nexus.hugo.dk`)"
      - "traefik.http.routers.code.tls=true"
      - "traefik.http.routers.code.tls.certresolver=letsencrypt"
      - "traefik.http.services.code.loadbalancer.server.port=8080"
      # Jupyter
      - "traefik.http.routers.jupyter.rule=Host(`jupyter.nexus.hugo.dk`)"
      - "traefik.http.routers.jupyter.tls=true"
      - "traefik.http.routers.jupyter.tls.certresolver=letsencrypt"
      - "traefik.http.services.jupyter.loadbalancer.server.port=8888"

  # Vault for secrets
  vault:
    image: vault:latest
    container_name: vault
    restart: unless-stopped
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-data:/vault/file
      - ./vault/config.hcl:/vault/config/config.hcl:ro
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
    command: server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vault.rule=Host(`vault.nexus.hugo.dk`)"
      - "traefik.http.routers.vault.tls=true"
      - "traefik.http.routers.vault.tls.certresolver=letsencrypt"
      - "traefik.http.services.vault.loadbalancer.server.port=8200"

  # Tabby Web UI
  tabby-web:
    image: ghcr.io/eugeny/tabby-web:latest
    container_name: tabby-web
    restart: unless-stopped
    environment:
      - DATABASE_URL=sqlite:////data/db.sqlite
      - PORT=9090
    volumes:
      - tabby-data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tabby.rule=Host(`tabby.nexus.hugo.dk`)"
      - "traefik.http.routers.tabby.tls=true"
      - "traefik.http.routers.tabby.tls.certresolver=letsencrypt"
      - "traefik.http.services.tabby.loadbalancer.server.port=9090"

volumes:
  vault-data:
  tabby-data: