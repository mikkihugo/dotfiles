#!/usr/bin/env bash

# Secret TUI - Terminal interface for SOPS secret management
# Part of the dotfiles ecosystem

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
TUI_BINARY="$SCRIPT_DIR/secret-tui-rust/target/release/secret-tui"

# Build the TUI if it doesn't exist or if the source is newer
if [[ ! -f "$TUI_BINARY" ]] || [[ "$SCRIPT_DIR/secret-tui-rust/src/main.rs" -nt "$TUI_BINARY" ]]; then
    echo "üî® Building secret-TUI..."
    cd "$SCRIPT_DIR/secret-tui-rust"
    cargo build --release --quiet
    echo "‚úÖ Build complete"
fi

# Ensure we have SOPS and age available
if ! command -v sops >/dev/null 2>&1; then
    echo "‚ùå SOPS not found. Please ensure you're in the Nix environment:"
    echo "   cd ~/.dotfiles && nix develop"
    exit 1
fi

if ! command -v age >/dev/null 2>&1; then
    echo "‚ùå Age not found. Please ensure you're in the Nix environment:"
    echo "   cd ~/.dotfiles && nix develop"
    exit 1
fi

# Check for age key
AGE_KEY_FILE="$HOME/.config/sops/age/keys.txt"
if [[ ! -f "$AGE_KEY_FILE" ]]; then
    echo "‚ùå Age key not found at $AGE_KEY_FILE"
    echo "   Run the dotfiles installation to set up SOPS encryption."
    exit 1
fi

# Export environment for the TUI
export SOPS_AGE_KEY_FILE="$AGE_KEY_FILE"
export DOTFILES_ROOT="${DOTFILES_ROOT:-$HOME/.dotfiles}"

echo "üîê Starting Secret TUI..."
echo "   Using SOPS key: $AGE_KEY_FILE"
echo "   Dotfiles root: $DOTFILES_ROOT"
echo ""

# Run the TUI
exec "$TUI_BINARY" "$@"