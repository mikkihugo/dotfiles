import type { CommandArgumentConfig, CommandOptionConfig } from './types.js';
export type Options = {
    /**
     * Program name. Defaults to `name` in the nearest package.json or the name of the executable.
     */
    name?: string;
    /**
     * Version. Defaults to `version` in the nearest package.json.
     */
    version?: string;
    /**
     * Description. Defaults to `description` in the nearest package.json.
     */
    description?: string;
    /**
     * Pass in [`import.meta`](https://nodejs.org/dist/latest/docs/api/esm.html#esm_import_meta). This is used to find the `commands` directory.
     */
    importMeta: ImportMeta;
};
export default class Pastel {
    private readonly options;
    constructor(options: Options);
    /**
     * Run the app.
     */
    run(argv?: string[]): Promise<void>;
}
/**
 * Set additional metadata for an option. Must be used as an argument to `describe` function from Zod.
 */
export declare function option(config: CommandOptionConfig): string;
/**
 * Set additional metadata for an argument. Must be used as an argument to `describe` function from Zod.
 */
export declare function argument(config: CommandArgumentConfig): string;
export * from './types.js';
